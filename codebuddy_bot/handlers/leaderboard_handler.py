from aiogram.types import Message
from database.models import SessionLocal, User


async def top(message: Message):
    db = SessionLocal()
    try:
        top_users = db.query(User).order_by(User.completed_tasks.desc()).limit(10).all()

        if not top_users:
            msg = "üìä –ù—ñ—Ö—Ç–æ —â–µ –Ω–µ –≤–∏–∫–æ–Ω–∞–≤ –∑–∞–≤–¥–∞–Ω—å."
        else:
            lines = ["üèÜ –¢–æ–ø 10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:"]
            for i, user in enumerate(top_users, start=1):
                name = user.name or f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.user_id}"
                lines.append(f"{i}. {name} - {user.completed_tasks} –∑–∞–≤–¥–∞–Ω—å")
            msg = "\n".join(lines)

        await message.answer(msg)

    except Exception as e:
        await message.answer("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ª—ñ–¥–µ—Ä–±–æ—Ä–¥—É")
        print(f"–ü–æ–º–∏–ª–∫–∞: {e}")
    finally:
        db.close()


from aiogram import Router, F

leaderboard_router = Router()


@leaderboard_router.message(F.text == "/leaderboard")
async def leaderboard_handler(message: Message):
    await top(message)