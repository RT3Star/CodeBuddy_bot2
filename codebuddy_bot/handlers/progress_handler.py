from aiogram.types import Message
from database.models import SessionLocal, User


async def progress(message: Message):
    db = SessionLocal()
    try:
        user_id = message.from_user.id
        user = db.query(User).filter(User.telegram_id == user_id).first()

        if not user:
            msg = "‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–æ–≥—Ä–µ—Å—É. –í–∏–∫–æ–Ω—É–π—Ç–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –π–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è."
        else:
            msg = (
                "üìä –¢–≤—ñ–π –ø—Ä–æ–≥—Ä–µ—Å:\n"
                f"üéØ –¢–µ–º–∞: {user.current_topic or '–Ω–µ –≤–∏–±—Ä–∞–Ω–æ'}\n"
                f"‚úÖ –ó–∞–≤–¥–∞–Ω—å –≤–∏–∫–æ–Ω–∞–Ω–æ: {user.completed_tasks}\n"
                f"üî• –°–µ—Ä—ñ—è: {user.streak} –¥–Ω—ñ–≤\n"
                f"‚≠ê XP: {user.xp}\n"
                f"üìà –†—ñ–≤–µ–Ω—å: {user.level}"
            )

        await message.answer(msg)

    except Exception as e:
        await message.answer("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ–≥—Ä–µ—Å—É")
        print(f"–ü–æ–º–∏–ª–∫–∞: {e}")
    finally:
        db.close()


from aiogram import Router, F

progress_router = Router()


@progress_router.message(F.text == "/progress")
async def progress_handler(message: Message):
    await progress(message)